- name: "SCORED | 5.1.1 | PATCH | Ensure cron daemon is enabled"
  service:
      name: crond
      enabled: yes

- name: "SCORED | 5.1.2 | PATCH | Ensure permissions on /etc/crontab are configured"
  file:
      dest: /etc/crontab
      owner: root
      group: root
      mode: 0600

- name: "SCORED | 5.1.3 | PATCH | Ensure permissions on /etc/cron.hourly are configured"
  file:
      dest: /etc/cron.hourly
      state: directory
      owner: root
      group: root
      mode: 0700


- name: "SCORED | 5.1.4 | PATCH | Ensure permissions on /etc/cron.daily are configured"
  file:
      dest: /etc/cron.daily
      state: directory
      owner: root
      group: root
      mode: 0700


- name: "SCORED | 5.1.5 | PATCH | Ensure permissions on /etc/cron.weekly are configured"
  file:
      dest: /etc/cron.weekly
      state: directory
      owner: root
      group: root
      mode: 0700


- name: "SCORED | 5.1.6 | PATCH | Ensure permissions on /etc/cron.monthly are configured"
  file:
      dest: /etc/cron.monthly
      state: directory
      owner: root
      group: root
      mode: 0700


- name: "SCORED | 5.1.7 | PATCH | Ensure permissions on /etc/cron.d are configured"
  file:
      dest: /etc/cron.d
      state: directory
      owner: root
      group: root
      mode: 0700


- name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
  block:
      - name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
        file:
            dest: /etc/at.deny
            state: absent

      - name: "SCORED | 5.1.8 | PATCH | Check if at.allow exists"
        stat:
            path: "/etc/at.allow"
        register: p

      - name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
        file:
            dest: /etc/at.allow
            state: '{{ "file" if  p.stat.exists else "touch"}}'
            owner: root
            group: root
            mode: 0600

      - name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
        file:
            dest: /etc/cron.deny
            state: absent

      - name: "SCORED | 5.1.8 | PATCH | Check if cron.allow exists"
        stat:
            path: "/etc/cron.allow"
        register: p

      - name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
        file:
            dest: /etc/cron.allow
            state: '{{ "file" if  p.stat.exists else "touch"}}'
            owner: root
            group: root
            mode: 0600


- name: "SCORED | 5.2.1 | PATCH | Ensure permissions on /etc/ssh/sshd_config are configured"
  file:
      dest: /etc/ssh/sshd_config
      state: file
      owner: root
      group: root
      mode: 0600


- name: "SCORED | 5.2.2 | PATCH | Ensure SSH Protocol is set to 2"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^Protocol'
      line: 'Protocol 2'

#
# - name: "SCORED | 5.2.3 | PATCH | Ensure SSH LogLevel is set to INFO"
#   lineinfile:
#       state: present
#       dest: /etc/ssh/sshd_config
#       regexp: '^LogLevel'
#       line: 'LogLevel INFO'


- name: "SCORED | 5.2.4 | PATCH | Ensure SSH X11 forwarding is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^X11Forwarding'
      line: 'X11Forwarding no'


- name: "SCORED | 5.2.5 | PATCH | Ensure SSH MaxAuthTries is set to 4 or less"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^(#)?MaxAuthTries \d'
      line: 'MaxAuthTries 4'


- name: "SCORED | 5.2.6 | PATCH | Ensure SSH IgnoreRhosts is enabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^IgnoreRhosts'
      line: 'IgnoreRhosts yes'

- name: "SCORED | 5.2.7 | PATCH | Ensure SSH HostbasedAuthentication is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^HostbasedAuthentication'
      line: 'HostbasedAuthentication no'


- name: "SCORED | 5.2.8 | PATCH | Ensure SSH root login is disabled(Replaced No to prohibit-password. -JohnP)"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^PermitRootLogin'
      line: 'PermitRootLogin prohibit-password'

- name: "SCORED | 5.2.9 | PATCH | Ensure SSH PermitEmptyPasswords is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^PermitEmptyPasswords'
      line: 'PermitEmptyPasswords no'


- name: "SCORED | 5.2.10 | PATCH | Ensure SSH PermitUserEnvironment is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^PermitUserEnvironment'
      line: 'PermitUserEnvironment no'

- name: "SCORED | 5.2.11 | PATCH | Ensure only approved ciphers are used - Added Recommended Cipher JohnP. 17-Jun21"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^Ciphers'
      line: 'Ciphers chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,blowfish-cbc,cast128-cbc,3des-cbc'
      #line: 'Ciphers aes128-cbc,aes192-cbc,aes256-cbc,rijndael-cbc@lysator.liu.se,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com'

- name: "SCORED | 5.2.12 | PATCH | Ensure only approved MAC algorithms are used"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^MACs'
      #line: 'MACs umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2256,hmac-sha2-512,hmac-sha1,hmac-sha1-etm@openssh.com'
      line: 'MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com'


- name: "SCORED | 5.2.12 | PATCH | Ensure only approved Key Algorithms are used"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^KexAlgorithms'
      #line: 'KexAlgorithms ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha256,curve25519-sha256@libssh.org,gss-gex-sha1-,gss-group14-sha1-'
      line: 'KexAlgorithms ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,curve25519-sha256@libssh.org'

- name: "SCORED | 5.2.13 | PATCH | Ensure SSH Idle Timeout Interval is configured"
  block:
      - name: "SCORED | 5.2.13 | PATCH | Ensure SSH Idle Timeout Interval is configured"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: '^ClientAliveInterval'
            line: "ClientAliveInterval 300"

      - name: "SCORED | 5.2.13 | PATCH | Ensure SSH ClientAliveCountMax set to <= 3"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: '^ClientAliveCountMax'
            line: "ClientAliveCountMax 3"

- name: "SCORED | 5.2.14 | PATCH | Ensure SSH LoginGraceTime is set to one minute or less"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^LoginGraceTime'
      line: "LoginGraceTime 60"

# - name: "SCORED | 5.2.15 | PATCH | Ensure SSH access is limited"
#   block:
#       - name: "SCORED | 5.2.15 | PATCH | Ensure SSH access is limited - allowusers"
#         lineinfile:
#             state: present
#             dest: /etc/ssh/sshd_config
#             regexp: "^AllowUsers"
#             line: AllowUsers
#         notify:
#             - restart sshd
#
#       - name: "SCORED | 5.2.15 | PATCH | Ensure SSH access is limited - allowgroups"
#         lineinfile:
#             state: present
#             dest: /etc/ssh/sshd_config
#             regexp: "^AllowGroups"
#             line: AllowGroups
#         notify:
#             - restart sshd

#
#       - name: "SCORED | 5.2.15 | PATCH | Ensure SSH access is limited - denyusers"
#         lineinfile:
#             state: present
#             dest: /etc/ssh/sshd_config
#             regexp: "^DenyUsers"
#             line: DenyUsers
#         notify:
#             - restart sshd

#
#       - name: "SCORED | 5.2.15 | PATCH | Ensure SSH access is limited - denygroups"
#         lineinfile:
#             state: present
#             dest: /etc/ssh/sshd_config
#             regexp: "^DenyGroups"
#             line: DenyGroups
#         notify:
#             - restart sshd

- name: "SCORED | 5.2.16 | PATCH | Ensure SSH warning banner is configured"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^Banner'
      line: 'Banner /etc/issue.net'

- name: "SCORED | 5.3.1 | PATCH | Ensure password creation requirements are configured"
  lineinfile:
      state: present
      dest: /etc/security/pwquality.conf
      regexp: '^{{ item.key }}'
      line: '{{ item.key }} = {{ item.value }}'
  with_items:
      - { key: 'minlen',  value: '14' }
      - { key: 'dcredit', value: '-1' }
      - { key: 'ucredit', value: '-1' }
      - { key: 'ocredit', value: '-1' }
      - { key: 'lcredit', value: '-1' }
  when: ansible_distribution == 'RedHat' and ansible_distribution_major_version >= '7'

- name: "SCORED | 5.3.2 | PATCH | Ensure lockout for failed password attempts is configured"
  pamd:
    name: system-auth
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: 'preauth
        audit
        silent
        deny=5
        unlock_time=900'
    state: before

- name: 5.3.2 - Ensure lockout for failed password attempts is configured(pam_faillock.so - last)
  pamd:
    name: system-auth
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: sufficient
    new_module_path: pam_faillock.so
    module_arguments: 'authsucc
        audit
        deny=5
        unlock_time=900'
    state: after


- name: 5.3.2 - Ensure lockout for failed password attempts is configured(pam_faillock.so - after)
  pamd:
    name: system-auth
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: "[default=die]"
    new_module_path: pam_faillock.so
    module_arguments: 'authfail
        audit
        deny=5
        unlock_time=900'
    state: after


- name: 5.3.2 - Ensure lockout for failed password attempts is configured(pam_unix.so)
  pamd:
    name: system-auth
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_control: '[success=1 default=bad]'
    module_arguments: ''
    state: updated


- name: 5.3.3 - "SCORED | 5.3.3 | PATCH Ensure password reuse is limited (/etc/pam.d/system-auth)"
  pamd:
    name: system-auth
    type: password
    control: sufficient
    module_path: pam_unix.so
    new_control: sufficient
    module_arguments: 'remember=5'
    state: updated


- name: 5.3.3 - Ensure password reuse is limited (/etc/pam.d/password-auth)
  pamd:
    name: password-auth
    type: password
    control: sufficient
    module_path: pam_unix.so
    new_control: sufficient
    module_arguments: 'remember=5'
    state: updated


- name: "SCORED | 5.3.4 | PATCH | Ensure password hashing algorithm is SHA-512"
  command: authconfig --passalgo=sha512 --update
  changed_when: no
  failed_when: no
